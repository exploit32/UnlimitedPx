// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The folder metadata object</para>
    /// </summary>
    /// <seealso cref="Dropbox.Api.Files.Metadata" />
    public class FolderMetadata : Metadata
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<FolderMetadata> Encoder = new FolderMetadataEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<FolderMetadata> Decoder = new FolderMetadataDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FolderMetadata" /> class.</para>
        /// </summary>
        /// <param name="name">The last component of the path (including extension). This never
        /// contains a slash.</param>
        /// <param name="pathLower">The lowercased full path in the user's Dropbox. This always
        /// starts with a slash.</param>
        /// <param name="parentSharedFolderId">Deprecated. Please use
        /// :field:'FileSharingInfo.parent_shared_folder_id' or
        /// :field:'FolderSharingInfo.parent_shared_folder_id' instead.</param>
        /// <param name="id">A unique identifier for the folder.</param>
        /// <param name="sharedFolderId">Deprecated. Please use :field:'sharing_info'
        /// instead.</param>
        /// <param name="sharingInfo">Set if the folder is contained in a shared folder or is a
        /// shared folder mount point.</param>
        public FolderMetadata(string name,
                              string pathLower,
                              string parentSharedFolderId = null,
                              string id = null,
                              string sharedFolderId = null,
                              FolderSharingInfo sharingInfo = null)
            : base(name, pathLower, parentSharedFolderId)
        {
            if (id != null && (id.Length < 1))
            {
                throw new sys.ArgumentOutOfRangeException("id");
            }

            if (sharedFolderId != null && (!re.Regex.IsMatch(sharedFolderId, @"\A(?:[-_0-9a-zA-Z:]+)\z")))
            {
                throw new sys.ArgumentOutOfRangeException("sharedFolderId");
            }

            this.Id = id;
            this.SharedFolderId = sharedFolderId;
            this.SharingInfo = sharingInfo;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FolderMetadata" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public FolderMetadata()
        {
        }

        /// <summary>
        /// <para>A unique identifier for the folder.</para>
        /// </summary>
        public string Id { get; protected set; }

        /// <summary>
        /// <para>Deprecated. Please use :field:'sharing_info' instead.</para>
        /// </summary>
        public string SharedFolderId { get; protected set; }

        /// <summary>
        /// <para>Set if the folder is contained in a shared folder or is a shared folder mount
        /// point.</para>
        /// </summary>
        public FolderSharingInfo SharingInfo { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="FolderMetadata" />.</para>
        /// </summary>
        private class FolderMetadataEncoder : enc.StructEncoder<FolderMetadata>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(FolderMetadata value, enc.IJsonWriter writer)
            {
                WriteProperty("name", value.Name, writer, enc.StringEncoder.Instance);
                WriteProperty("path_lower", value.PathLower, writer, enc.StringEncoder.Instance);
                if (value.ParentSharedFolderId != null)
                {
                    WriteProperty("parent_shared_folder_id", value.ParentSharedFolderId, writer, enc.StringEncoder.Instance);
                }
                if (value.Id != null)
                {
                    WriteProperty("id", value.Id, writer, enc.StringEncoder.Instance);
                }
                if (value.SharedFolderId != null)
                {
                    WriteProperty("shared_folder_id", value.SharedFolderId, writer, enc.StringEncoder.Instance);
                }
                if (value.SharingInfo != null)
                {
                    WriteProperty("sharing_info", value.SharingInfo, writer, Dropbox.Api.Files.FolderSharingInfo.Encoder);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="FolderMetadata" />.</para>
        /// </summary>
        private class FolderMetadataDecoder : enc.StructDecoder<FolderMetadata>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="FolderMetadata" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override FolderMetadata Create()
            {
                return new FolderMetadata();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(FolderMetadata value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "name":
                        value.Name = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "path_lower":
                        value.PathLower = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "parent_shared_folder_id":
                        value.ParentSharedFolderId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "id":
                        value.Id = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "shared_folder_id":
                        value.SharedFolderId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "sharing_info":
                        value.SharingInfo = Dropbox.Api.Files.FolderSharingInfo.Decoder.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}

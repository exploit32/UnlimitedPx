// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The share path error object</para>
    /// </summary>
    public class SharePathError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SharePathError> Encoder = new SharePathErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SharePathError> Decoder = new SharePathErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharePathError" /> class.</para>
        /// </summary>
        public SharePathError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is IsFile</para>
        /// </summary>
        public bool IsIsFile
        {
            get
            {
                return this is IsFile;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a IsFile, or <c>null</c>.</para>
        /// </summary>
        public IsFile AsIsFile
        {
            get
            {
                return this as IsFile;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InsideSharedFolder</para>
        /// </summary>
        public bool IsInsideSharedFolder
        {
            get
            {
                return this is InsideSharedFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InsideSharedFolder, or <c>null</c>.</para>
        /// </summary>
        public InsideSharedFolder AsInsideSharedFolder
        {
            get
            {
                return this as InsideSharedFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ContainsSharedFolder</para>
        /// </summary>
        public bool IsContainsSharedFolder
        {
            get
            {
                return this is ContainsSharedFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ContainsSharedFolder, or <c>null</c>.</para>
        /// </summary>
        public ContainsSharedFolder AsContainsSharedFolder
        {
            get
            {
                return this as ContainsSharedFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is IsAppFolder</para>
        /// </summary>
        public bool IsIsAppFolder
        {
            get
            {
                return this is IsAppFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a IsAppFolder, or <c>null</c>.</para>
        /// </summary>
        public IsAppFolder AsIsAppFolder
        {
            get
            {
                return this as IsAppFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InsideAppFolder</para>
        /// </summary>
        public bool IsInsideAppFolder
        {
            get
            {
                return this is InsideAppFolder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InsideAppFolder, or <c>null</c>.</para>
        /// </summary>
        public InsideAppFolder AsInsideAppFolder
        {
            get
            {
                return this as InsideAppFolder;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is AlreadyShared</para>
        /// </summary>
        public bool IsAlreadyShared
        {
            get
            {
                return this is AlreadyShared;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a AlreadyShared, or <c>null</c>.</para>
        /// </summary>
        public AlreadyShared AsAlreadyShared
        {
            get
            {
                return this as AlreadyShared;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InvalidPath</para>
        /// </summary>
        public bool IsInvalidPath
        {
            get
            {
                return this is InvalidPath;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InvalidPath, or <c>null</c>.</para>
        /// </summary>
        public InvalidPath AsInvalidPath
        {
            get
            {
                return this as InvalidPath;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SharePathError" />.</para>
        /// </summary>
        private class SharePathErrorEncoder : enc.StructEncoder<SharePathError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SharePathError value, enc.IJsonWriter writer)
            {
                if (value is IsFile)
                {
                    WriteProperty(".tag", "is_file", writer, enc.StringEncoder.Instance);
                    IsFile.Encoder.EncodeFields((IsFile)value, writer);
                    return;
                }
                if (value is InsideSharedFolder)
                {
                    WriteProperty(".tag", "inside_shared_folder", writer, enc.StringEncoder.Instance);
                    InsideSharedFolder.Encoder.EncodeFields((InsideSharedFolder)value, writer);
                    return;
                }
                if (value is ContainsSharedFolder)
                {
                    WriteProperty(".tag", "contains_shared_folder", writer, enc.StringEncoder.Instance);
                    ContainsSharedFolder.Encoder.EncodeFields((ContainsSharedFolder)value, writer);
                    return;
                }
                if (value is IsAppFolder)
                {
                    WriteProperty(".tag", "is_app_folder", writer, enc.StringEncoder.Instance);
                    IsAppFolder.Encoder.EncodeFields((IsAppFolder)value, writer);
                    return;
                }
                if (value is InsideAppFolder)
                {
                    WriteProperty(".tag", "inside_app_folder", writer, enc.StringEncoder.Instance);
                    InsideAppFolder.Encoder.EncodeFields((InsideAppFolder)value, writer);
                    return;
                }
                if (value is AlreadyShared)
                {
                    WriteProperty(".tag", "already_shared", writer, enc.StringEncoder.Instance);
                    AlreadyShared.Encoder.EncodeFields((AlreadyShared)value, writer);
                    return;
                }
                if (value is InvalidPath)
                {
                    WriteProperty(".tag", "invalid_path", writer, enc.StringEncoder.Instance);
                    InvalidPath.Encoder.EncodeFields((InvalidPath)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SharePathError" />.</para>
        /// </summary>
        private class SharePathErrorDecoder : enc.UnionDecoder<SharePathError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SharePathError" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SharePathError Create()
            {
                return new SharePathError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override SharePathError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "is_file":
                        return IsFile.Decoder.DecodeFields(reader);
                    case "inside_shared_folder":
                        return InsideSharedFolder.Decoder.DecodeFields(reader);
                    case "contains_shared_folder":
                        return ContainsSharedFolder.Decoder.DecodeFields(reader);
                    case "is_app_folder":
                        return IsAppFolder.Decoder.DecodeFields(reader);
                    case "inside_app_folder":
                        return InsideAppFolder.Decoder.DecodeFields(reader);
                    case "already_shared":
                        return AlreadyShared.Decoder.DecodeFields(reader);
                    case "invalid_path":
                        return InvalidPath.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>A file is at the specified path.</para>
        /// </summary>
        public sealed class IsFile : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<IsFile> Encoder = new IsFileEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<IsFile> Decoder = new IsFileDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="IsFile" /> class.</para>
            /// </summary>
            private IsFile()
            {
            }

            /// <summary>
            /// <para>A singleton instance of IsFile</para>
            /// </summary>
            public static readonly IsFile Instance = new IsFile();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="IsFile" />.</para>
            /// </summary>
            private class IsFileEncoder : enc.StructEncoder<IsFile>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(IsFile value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="IsFile" />.</para>
            /// </summary>
            private class IsFileDecoder : enc.StructDecoder<IsFile>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="IsFile" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override IsFile Create()
                {
                    return new IsFile();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override IsFile DecodeFields(enc.IJsonReader reader)
                {
                    return IsFile.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>We do not support sharing a folder inside a shared folder.</para>
        /// </summary>
        public sealed class InsideSharedFolder : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InsideSharedFolder> Encoder = new InsideSharedFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InsideSharedFolder> Decoder = new InsideSharedFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InsideSharedFolder" />
            /// class.</para>
            /// </summary>
            private InsideSharedFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InsideSharedFolder</para>
            /// </summary>
            public static readonly InsideSharedFolder Instance = new InsideSharedFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InsideSharedFolder" />.</para>
            /// </summary>
            private class InsideSharedFolderEncoder : enc.StructEncoder<InsideSharedFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InsideSharedFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InsideSharedFolder" />.</para>
            /// </summary>
            private class InsideSharedFolderDecoder : enc.StructDecoder<InsideSharedFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InsideSharedFolder"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InsideSharedFolder Create()
                {
                    return new InsideSharedFolder();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override InsideSharedFolder DecodeFields(enc.IJsonReader reader)
                {
                    return InsideSharedFolder.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>We do not support shared folders that contain shared folders.</para>
        /// </summary>
        public sealed class ContainsSharedFolder : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ContainsSharedFolder> Encoder = new ContainsSharedFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ContainsSharedFolder> Decoder = new ContainsSharedFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ContainsSharedFolder" />
            /// class.</para>
            /// </summary>
            private ContainsSharedFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ContainsSharedFolder</para>
            /// </summary>
            public static readonly ContainsSharedFolder Instance = new ContainsSharedFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ContainsSharedFolder" />.</para>
            /// </summary>
            private class ContainsSharedFolderEncoder : enc.StructEncoder<ContainsSharedFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ContainsSharedFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ContainsSharedFolder" />.</para>
            /// </summary>
            private class ContainsSharedFolderDecoder : enc.StructDecoder<ContainsSharedFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ContainsSharedFolder"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ContainsSharedFolder Create()
                {
                    return new ContainsSharedFolder();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override ContainsSharedFolder DecodeFields(enc.IJsonReader reader)
                {
                    return ContainsSharedFolder.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>We do not support sharing an app folder.</para>
        /// </summary>
        public sealed class IsAppFolder : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<IsAppFolder> Encoder = new IsAppFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<IsAppFolder> Decoder = new IsAppFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="IsAppFolder" />
            /// class.</para>
            /// </summary>
            private IsAppFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of IsAppFolder</para>
            /// </summary>
            public static readonly IsAppFolder Instance = new IsAppFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="IsAppFolder" />.</para>
            /// </summary>
            private class IsAppFolderEncoder : enc.StructEncoder<IsAppFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(IsAppFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="IsAppFolder" />.</para>
            /// </summary>
            private class IsAppFolderDecoder : enc.StructDecoder<IsAppFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="IsAppFolder" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override IsAppFolder Create()
                {
                    return new IsAppFolder();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override IsAppFolder DecodeFields(enc.IJsonReader reader)
                {
                    return IsAppFolder.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>We do not support sharing a folder inside an app folder.</para>
        /// </summary>
        public sealed class InsideAppFolder : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InsideAppFolder> Encoder = new InsideAppFolderEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InsideAppFolder> Decoder = new InsideAppFolderDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InsideAppFolder" />
            /// class.</para>
            /// </summary>
            private InsideAppFolder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InsideAppFolder</para>
            /// </summary>
            public static readonly InsideAppFolder Instance = new InsideAppFolder();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InsideAppFolder" />.</para>
            /// </summary>
            private class InsideAppFolderEncoder : enc.StructEncoder<InsideAppFolder>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InsideAppFolder value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InsideAppFolder" />.</para>
            /// </summary>
            private class InsideAppFolderDecoder : enc.StructDecoder<InsideAppFolder>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InsideAppFolder" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InsideAppFolder Create()
                {
                    return new InsideAppFolder();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override InsideAppFolder DecodeFields(enc.IJsonReader reader)
                {
                    return InsideAppFolder.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>Folder is already shared.</para>
        /// </summary>
        public sealed class AlreadyShared : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<AlreadyShared> Encoder = new AlreadySharedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<AlreadyShared> Decoder = new AlreadySharedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="AlreadyShared" />
            /// class.</para>
            /// </summary>
            private AlreadyShared()
            {
            }

            /// <summary>
            /// <para>A singleton instance of AlreadyShared</para>
            /// </summary>
            public static readonly AlreadyShared Instance = new AlreadyShared();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="AlreadyShared" />.</para>
            /// </summary>
            private class AlreadySharedEncoder : enc.StructEncoder<AlreadyShared>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(AlreadyShared value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="AlreadyShared" />.</para>
            /// </summary>
            private class AlreadySharedDecoder : enc.StructDecoder<AlreadyShared>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="AlreadyShared" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override AlreadyShared Create()
                {
                    return new AlreadyShared();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override AlreadyShared DecodeFields(enc.IJsonReader reader)
                {
                    return AlreadyShared.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>Path is not valid.</para>
        /// </summary>
        public sealed class InvalidPath : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<InvalidPath> Encoder = new InvalidPathEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<InvalidPath> Decoder = new InvalidPathDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InvalidPath" />
            /// class.</para>
            /// </summary>
            private InvalidPath()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InvalidPath</para>
            /// </summary>
            public static readonly InvalidPath Instance = new InvalidPath();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="InvalidPath" />.</para>
            /// </summary>
            private class InvalidPathEncoder : enc.StructEncoder<InvalidPath>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(InvalidPath value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="InvalidPath" />.</para>
            /// </summary>
            private class InvalidPathDecoder : enc.StructDecoder<InvalidPath>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="InvalidPath" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override InvalidPath Create()
                {
                    return new InvalidPath();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override InvalidPath DecodeFields(enc.IJsonReader reader)
                {
                    return InvalidPath.Instance;
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : SharePathError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return new Other();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override Other DecodeFields(enc.IJsonReader reader)
                {
                    return Other.Instance;
                }
            }

            #endregion
        }
    }
}

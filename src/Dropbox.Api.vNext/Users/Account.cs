// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Users
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The amount of detail revealed about an account depends on the user being queried
    /// and the user making the query.</para>
    /// </summary>
    /// <seealso cref="BasicAccount" />
    /// <seealso cref="FullAccount" />
    public class Account
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<Account> Encoder = new AccountEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<Account> Decoder = new AccountDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Account" /> class.</para>
        /// </summary>
        /// <param name="accountId">The user's unique Dropbox ID.</param>
        /// <param name="name">Details of a user's name.</param>
        public Account(string accountId,
                       Name name)
        {
            if (accountId == null)
            {
                throw new sys.ArgumentNullException("accountId");
            }
            else if (accountId.Length < 40 || accountId.Length > 40)
            {
                throw new sys.ArgumentOutOfRangeException("accountId");
            }

            if (name == null)
            {
                throw new sys.ArgumentNullException("name");
            }

            this.AccountId = accountId;
            this.Name = name;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Account" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public Account()
        {
        }

        /// <summary>
        /// <para>The user's unique Dropbox ID.</para>
        /// </summary>
        public string AccountId { get; protected set; }

        /// <summary>
        /// <para>Details of a user's name.</para>
        /// </summary>
        public Name Name { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="Account" />.</para>
        /// </summary>
        private class AccountEncoder : enc.StructEncoder<Account>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(Account value, enc.IJsonWriter writer)
            {
                WriteProperty("account_id", value.AccountId, writer, enc.StringEncoder.Instance);
                WriteProperty("name", value.Name, writer, Dropbox.Api.Users.Name.Encoder);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="Account" />.</para>
        /// </summary>
        private class AccountDecoder : enc.StructDecoder<Account>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="Account" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override Account Create()
            {
                return new Account();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(Account value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "account_id":
                        value.AccountId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "name":
                        value.Name = Dropbox.Api.Users.Name.Decoder.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
